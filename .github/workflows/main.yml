name: Terraform

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install MySQL Client
        run: sudo apt-get install -y mysql-client

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.10

      - name: Terraform Init
        run: terraform init

      - name: Print DB Password (For Debugging Only)
        run: |
          echo "DB Password: ${{ secrets.DB_PASS }}"

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_db_password: ${{ secrets.DB_PASS }}
          TF_VAR_db_username: ${{ secrets.DB_USER }}
          TF_VAR_vpc_id: ${{ secrets.VPC_ID }}
          TF_VAR_subnet_ids: ${{ secrets.SUBNET_IDS }}

      - name: Get RDS Endpoint
        id: rds_endpoint
        run: |
          RDS_ENDPOINT=$(terraform output -raw rds_endpoint)
          echo "RDS_ENDPOINT=$RDS_ENDPOINT" >> $GITHUB_ENV

      - name: Wait for RDS to be available
        run: |
          until mysql -h ${{ env.RDS_ENDPOINT }} -u ${{ secrets.DB_USER }} -p${{ secrets.DB_PASS }} -e "SELECT 1"; do
            echo "Waiting for MySQL RDS instance to be available..."
            sleep 30
          done
        env:
          DB_HOST: ${{ env.RDS_ENDPOINT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}

      - name: Run Database Initialization Script
        run: |
          chmod +x create-database.sh
          ./create-database.sh
        env:
          DB_HOST: ${{ env.RDS_ENDPOINT }}
          DB_PORT: 3306
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASS: ${{ secrets.DB_PASS }}
          DB_NAME: pdv
